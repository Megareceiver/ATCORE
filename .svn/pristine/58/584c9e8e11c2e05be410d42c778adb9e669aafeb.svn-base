<?php
/**********************************************************************
    Copyright (C) FrontAccounting, LLC.
	Released under the terms of the GNU General Public License, GPL,
	as published by the Free Software Foundation, either version 3
	of the License, or (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the License here <http://www.gnu.org/licenses/gpl-3.0.html>.
***********************************************************************/
$page_security = 'SA_GLSETUP';
global $ci;
$path_to_root="..";
include($path_to_root . "/includes/session.inc");
$js = get_js_date_picker();
page(_($help_context = "System and General GL Setup"),false, false, "", $js);

include_once($path_to_root . "/includes/date_functions.inc");
include_once($path_to_root . "/includes/ui.inc");
include_once($path_to_root . "/includes/data_checks.inc");

include_once($path_to_root . "/admin/db/company_db.inc");

$gst_registration_date = array(
    'gst_default_code'=>array('title'=>'Default GST Code','value'=>null),
    'gst_start_date'=>array('title'=>'GST Start Date','value'=>''),
    'maximum_claimable_currency'=>array('value'=>''),
    'maximum_claimable_input_tax'=>array('value'=>''),
    'custom_duty'=>array('value'=>''),


);

// function set_post_value($fields=array(),$row=array()){
//     if( is_array($fields) && is_array($row)){

//     }
// }

//-------------------------------------------------------------------------------------------------

function can_process(){
	if (!check_num('po_over_receive', 0, 100)){
		display_error(_("The delivery over-receive allowance must be between 0 and 100."));
		set_focus('po_over_receive');
		return false;
	}

	if (!check_num('po_over_charge', 0, 100)){
		display_error(_("The invoice over-charge allowance must be between 0 and 100."));
		set_focus('po_over_charge');
		return false;
	}

	if (!check_num('past_due_days', 0, 100)){
		display_error(_("The past due days interval allowance must be between 0 and 100."));
		set_focus('past_due_days');
		return false;
	}

	$grn_act = get_company_pref('grn_clearing_act');
	if ((get_post('grn_clearing_act') != $grn_act) && db_num_rows(get_grn_items(0, '', true))){
		display_error(_("Before GRN Clearing Account can be changed all GRNs have to be invoiced"));
		$_POST['grn_clearing_act'] = $grn_act;
		set_focus('grn_clearing_account');
		return false;
	}
	if (!is_account_balancesheet(get_post('retained_earnings_act')) || is_account_balancesheet(get_post('profit_loss_year_act'))){
		display_error(_("The Retained Earnings Account should be a Balance Account or the Profit and Loss Year Account should be an Expense Account (preferred the last one in the Expense Class)"));
		return false;
	}
	return true;
}

//-------------------------------------------------------------------------------------------------

if (isset($_POST['submit']) && can_process()){
    $submit_fields = array( 'retained_earnings_act', 'profit_loss_year_act',
		'debtors_act', 'pyt_discount_act', 'creditors_act', 'freight_act',
		'exchange_diff_act', 'bank_charge_act', 'default_sales_act', 'default_sales_discount_act',
        'rounding_difference_act',
		'default_prompt_payment_act', 'default_inventory_act', 'default_cogs_act',
		'default_adj_act', 'default_inv_sales_act', 'default_assembly_act', 'legal_text',
		'past_due_days', 'default_workorder_required', 'default_dim_required',
		'default_delivery_required', 'grn_clearing_act',
		'baddeb_sale_reverse','baddeb_sale_tax_reverse','baddeb_purchase_reverse','baddeb_purchase_tax_reverse',
		'baddeb_purchase_tax','baddeb_sale_tax',
		'allow_negative_stock'=> 0, 'accumulate_shipping'=> 0,
		'po_over_receive' => 0.0, 'po_over_charge' => 0.0, 'default_credit_limit'=>0.0
    );
    foreach ($gst_registration_date AS $field=>$val) {
        if( !isset($submit_fields[$field]) ){
            $submit_fields[] = $field;
        }
    }
	update_company_prefs( get_post($submit_fields));
	display_notification(_("The general GL setup has been updated."));
} /* end of if submit */

//-------------------------------------------------------------------------------------------------

start_form();

start_outer_table(TABLESTYLE2);

table_section(1);

if (get_company_pref('grn_clearing_act') === null) { // available from 2.3.1, can be not defined on pre-2.4 installations
	set_company_pref('grn_clearing_act', 'glsetup.purchase', 'varchar', 15, 0);
	refresh_sys_prefs();
}

$myrow = get_company_prefs();

$_POST['retained_earnings_act']  = $myrow["retained_earnings_act"];
$_POST['profit_loss_year_act']  = $myrow["profit_loss_year_act"];
$_POST['debtors_act']  = $myrow["debtors_act"];
$_POST['creditors_act']  = $myrow["creditors_act"];
$_POST['freight_act'] = $myrow["freight_act"];
$_POST['pyt_discount_act']  = $myrow["pyt_discount_act"];

$_POST['exchange_diff_act'] = $myrow["exchange_diff_act"];
$_POST['rounding_difference_act'] = $myrow["rounding_difference_act"];
$_POST['bank_charge_act'] = $myrow["bank_charge_act"];
$_POST['default_sales_act'] = $myrow["default_sales_act"];
$_POST['default_sales_discount_act']  = $myrow["default_sales_discount_act"];
$_POST['default_prompt_payment_act']  = $myrow["default_prompt_payment_act"];

$_POST['default_inventory_act'] = $myrow["default_inventory_act"];
$_POST['default_cogs_act'] = $myrow["default_cogs_act"];
$_POST['default_adj_act'] = $myrow["default_adj_act"];
$_POST['default_inv_sales_act'] = $myrow['default_inv_sales_act'];
$_POST['default_assembly_act'] = $myrow['default_assembly_act'];

$_POST['allow_negative_stock'] = $myrow['allow_negative_stock'];

$_POST['po_over_receive'] = percent_format($myrow['po_over_receive']);
$_POST['po_over_charge'] = percent_format($myrow['po_over_charge']);
$_POST['past_due_days'] = $myrow['past_due_days'];

$_POST['grn_clearing_act'] = $myrow['grn_clearing_act'];

$_POST['default_credit_limit'] = $myrow['default_credit_limit'];
$_POST['legal_text'] = $myrow['legal_text'];
$_POST['accumulate_shipping'] = $myrow['accumulate_shipping'];

$_POST['default_workorder_required'] = $myrow['default_workorder_required'];
$_POST['default_dim_required'] = $myrow['default_dim_required'];
$_POST['default_delivery_required'] = $myrow['default_delivery_required'];

$_POST['baddeb_sale_reverse'] = $myrow['baddeb_sale_reverse'];
$_POST['baddeb_sale_tax_reverse'] = $myrow['baddeb_sale_tax_reverse'];
$_POST['baddeb_sale_tax'] = $myrow['baddeb_sale_tax'];
$_POST['baddeb_purchase_reverse'] = $myrow['baddeb_purchase_reverse'];
$_POST['baddeb_purchase_tax_reverse'] = $myrow['baddeb_purchase_tax_reverse'];
$_POST['baddeb_purchase_tax'] = $myrow['baddeb_purchase_tax'];

foreach ($gst_registration_date AS $field=>$val) {
    if( isset($myrow[$field]) ){
           $_POST[$field] = $myrow[$field];
    }
}


//---------------
table_section_title(_("Company GST Registration Date"));

echo $ci->finput->inputtaxes('Default GST Code:','gst_default_code',$_POST['gst_default_code'],'2,3','row');

date_row(_("GST Start Date:"), 'gst_start_date');


table_section_title(_("General GL"));

text_row(_("Past Due Days Interval:"), 'past_due_days', $_POST['past_due_days'], 6, 6, '', "", _("days"));
gl_all_accounts_list_row(_("Retained Earnings:"), 'retained_earnings_act', $_POST['retained_earnings_act']);
gl_all_accounts_list_row(_("Profit/Loss Year:"), 'profit_loss_year_act', $_POST['profit_loss_year_act']);
gl_all_accounts_list_row(_("Exchange Variances Account:"), 'exchange_diff_act', $_POST['exchange_diff_act']);
gl_all_accounts_list_row(_("Rounding Difference Account:"), 'rounding_difference_act', $_POST['rounding_difference_act']);
gl_all_accounts_list_row(_("Bank Charges Account:"), 'bank_charge_act', $_POST['bank_charge_act']);
gl_all_accounts_list_row(_("Custom Duty:"), 'custom_duty');

//---------------

table_section_title(_("Customers and Sales"));
text_row(_("Default Credit Limit:"), 'default_credit_limit', $_POST['default_credit_limit'], 12, 12);
check_row(_("Accumulate batch shipping:"), 'accumulate_shipping', null);
textarea_row(_("Legal Text on Invoice:"), 'legal_text', $_POST['legal_text'], 32, 3);
gl_all_accounts_list_row(_("Shipping Charged Account:"), 'freight_act', $_POST['freight_act']);

//---------------

table_section_title(_("Customers and Sales Defaults"));
// default for customer branch
gl_all_accounts_list_row(_("Receivable Account:"), 'debtors_act');
gl_all_accounts_list_row(_("Sales Account:"), 'default_sales_act', null, false, false, true);
gl_all_accounts_list_row(_("Sales Discount Account:"), 'default_sales_discount_act');
gl_all_accounts_list_row(_("Prompt Payment Discount Account:"), 'default_prompt_payment_act');
text_row(_("Delivery Required By:"), 'default_delivery_required', $_POST['default_delivery_required'], 6, 6, '', "", _("days"));

/*
 * 150828 - QuanNH add Bad Deb setting
 */
table_section_title(_("Bad Debts Defaults"));
gl_all_accounts_list_row(_("Sales Reverse Account:"), 'baddeb_sale_reverse', $_POST['baddeb_sale_reverse']);
gl_all_accounts_list_row(_("Output Tax Reverse Account:"), 'baddeb_sale_tax_reverse', $_POST['baddeb_sale_tax_reverse']);
echo $ci->finput->inputtaxes('Output Tax','baddeb_sale_tax',$_POST['baddeb_sale_tax'],2,'row');

gl_all_accounts_list_row(_("Purchase Reverse Account:"), 'baddeb_purchase_reverse', $_POST['baddeb_purchase_reverse']);
gl_all_accounts_list_row(_("Input Tax Reverse Account:"), 'baddeb_purchase_tax_reverse', $_POST['baddeb_purchase_tax_reverse']);
echo $ci->finput->inputtaxes('Input Tax','baddeb_purchase_tax',$_POST['baddeb_purchase_tax'],3,'row');

//----------------

table_section(2);

table_section_title(_("Department Defaults"));

text_row(_("Department Required By After:"), 'default_dim_required', $_POST['default_dim_required'], 6, 6, '', "", _("days"));
//---------------

table_section_title(_("Suppliers and Purchasing"));

percent_row(_("Delivery Over-Receive Allowance:"), 'po_over_receive');

percent_row(_("Invoice Over-Charge Allowance:"), 'po_over_charge');

table_section_title(_("Suppliers and Purchasing Defaults"));

gl_all_accounts_list_row(_("Payable Account:"), 'creditors_act', $_POST['creditors_act']);

gl_all_accounts_list_row(_("Purchase Discount Account:"), 'pyt_discount_act', $_POST['pyt_discount_act']);

gl_all_accounts_list_row(_("GRN Clearing Account:"), 'grn_clearing_act', get_post('grn_clearing_act'), true, false, _("No postings on GRN"));

table_section_title(_("Inventory"));

check_row(_("Allow Negative Inventory:"), 'allow_negative_stock', null);
label_row(null, _("Warning:  This may cause a delay in GL postings"), "", "class='stockmankofg' colspan=2");

table_section_title(_("Items Defaults"));
gl_all_accounts_list_row(_("Sales Account:"), 'default_inv_sales_act', $_POST['default_inv_sales_act']);

gl_all_accounts_list_row(_("Inventory Account:"), 'default_inventory_act', $_POST['default_inventory_act']);
// this one is default for items and suppliers (purchase account)
gl_all_accounts_list_row(_("C.O.G.S. Account:"), 'default_cogs_act', $_POST['default_cogs_act']);

gl_all_accounts_list_row(_("Inventory Adjustments Account:"), 'default_adj_act', $_POST['default_adj_act']);

gl_all_accounts_list_row(_("Item Assembly Costs Account:"), 'default_assembly_act', $_POST['default_assembly_act']);

//----------------

table_section_title(_("Manufacturing Defaults"));

text_row(_("Work Order Required By After:"), 'default_workorder_required', $_POST['default_workorder_required'], 6, 6, '', "", _("days"));

table_section_title(_("Maximum Claimable Input Tax"));

text_row(_("Simplified Invoice:"), 'maximum_claimable_input_tax', $_POST['maximum_claimable_input_tax']);
currencies_list_row(_("Check to Currency:"), 'maximum_claimable_currency', $_POST['maximum_claimable_currency']);

//----------------

end_outer_table(1);

submit_center('submit', _("Update"), true, '', 'default');

end_form(2);

//-------------------------------------------------------------------------------------------------

end_page();

?>
