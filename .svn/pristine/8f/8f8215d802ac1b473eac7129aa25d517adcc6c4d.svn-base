<?php
class Supplier_Transaction_Model extends CI_Model {
    var $aaa='bbb';
    function __construct(){
        parent::__construct();
    }

    function get_transactions($supplier_id,$date_from=null,$date_to=null,$type=ST_SUPPINVOICE){

        $date_from = date2sql($date_from);
        $date_to = date2sql($date_to);
        $total_str = "(tran.ov_amount+tran.ov_gst+tran.ov_discount)";
        $allocated_str = "IF(tran.type=".ST_SUPPINVOICE.",
            (SELECT SUM(alloc.amt) FROM supp_allocations AS alloc WHERE alloc.trans_type_to = tran.type AND alloc.trans_no_to=tran.trans_no AND alloc.date_alloc <='$date_to' ),
            tran.alloc)";


        $this->db->select("tran.*")->from('supp_trans AS tran');

        $this->db->select("( tran.type = ".ST_SUPPINVOICE." AND tran.due_date < '$date_to') AS OverDue",false);
        $this->db->select("$total_str AS total_amount",false);
        $this->db->select("IF( $total_str > 0,$total_str,0 ) AS credit",false);
        $this->db->select("IF( $total_str < 0,-$total_str,0 ) AS debit",false);

        //alloc AS allocated
        $this->db->select("IF($allocated_str IS NULL,0,$allocated_str) AS allocated",false);
        $this->db->select("IF( $total_str > 0, $total_str- (IF($allocated_str IS NULL,0,$allocated_str)), (IF($allocated_str IS NULL,0,$allocated_str))-ABS($total_str) ) AS outstanding",false);

        $this->db->where('ov_amount !=',0);

        $this->db->where('supplier_id',$supplier_id);
        if( $date_from ){
            $this->db->where('tran.tran_date >=',$date_from);
        }
        if( $date_to ){
            $this->db->where('tran.tran_date <=',$date_to);
            // 	        $this->tran->where('due_date <',$date_to);
        }
        $this->db->left_join('gl_trans AS gl','gl.type=tran.type AND gl.type_no=tran.trans_no AND gl.account=2100 AND gl.amount <> 0')->select('gl.amount AS gl_2100');
        $data = $this->db->order_by('tran.tran_date')->get()->result();

// 	    bug( $this->db->last_query() );die;
        return $data;
    }

    function get_open_balance($supplier_id,$date_to=null){
        $select = ' SUM(  alloc ) AS allocated ';

        $select .=', SUM( IF(type =  '.ST_SUPPINVOICE.' OR type = '.ST_BANKDEPOSIT.' , ( ov_amount + ov_gst + ov_discount), 0) ) AS debit';
        $select .=', SUM( IF( type <> '.ST_SUPPINVOICE.' AND type <> '.ST_BANKDEPOSIT.', -(ov_amount + ov_gst + ov_discount), 0) ) AS credit';
        $select .=', SUM( '
            //  .' IF(type = '.ST_SUPPINVOICE.' OR type = '.ST_BANKDEPOSIT.', ( ov_amount + ov_gst + ov_discount - alloc), (ov_amount + ov_gst + ov_discount + alloc))'
        .'CASE supp_trans.type'
            .' WHEN '.ST_SUPPINVOICE.' THEN ov_amount + ov_gst + ov_discount - alloc '
            .' WHEN '.ST_BANKDEPOSIT.' THEN ov_amount + ov_gst + ov_discount - alloc '
            .' WHEN '.ST_OPENING_SUPPLIER.' THEN -alloc - ov_amount - ov_gst - ov_discount '
            .' ELSE ov_amount + ov_gst + ov_discount + alloc '
        .'END'
        .') AS outstanding';



        $data = $this->db->select($select,false)->where(array('tran_date <'=>date2sql($date_to),'supplier_id'=>$supplier_id,'ov_amount !='=>0))->order_by('supplier_id')->get('supp_trans');

        if( is_object($data) ){
            return $data->row();
        } else {
            bug( $this->db->last_query() );die;
        }

    }
}