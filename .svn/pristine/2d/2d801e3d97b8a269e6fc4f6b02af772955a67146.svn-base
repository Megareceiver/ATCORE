<?php
class Gl_GL_Model extends CI_Model {
	function __construct(){
		parent::__construct();
		$this->void_model = module_model_load('tran','void');
// 		bug($this->void_model);die;
	}

	function get_trans($tran_no=0,$tran_type=ST_JOURNAL,$where=NULL){

	    $this->db->select('gl.*');

	    $this->db->join('chart_master AS cm','gl.account = cm.account_code','left')->select('cm.account_name');

	    $this->db->join('refs AS refs','refs.type=gl.type AND refs.id=gl.type_no','left');
	    $this->db->select("IF(ISNULL(refs.reference), '', refs.reference) AS reference",false);

	    $this->db->where('gl.amount !=',0);

	    if( $tran_no ){
	        $this->db->where("( (gl.type= $tran_type AND gl.type_no = $tran_no ) OR (gl.type= ".ST_BADDEB." AND gl.type_no IN (SELECT id FROM bad_debts WHERE type=$tran_type AND type_no=$tran_no)) )");
	    } else {
	        $this->db->where("( (gl.type= $tran_type ) OR (gl.type= ".ST_BADDEB." AND gl.type_no IN (SELECT id FROM bad_debts WHERE type=$tran_type)) )");
	    }

	    if( $where ){
	        $this->db->where($where);
	    }
	    $this->db->order_by('gl.counter');
// 		$trans = $this->db->group_by('gl.account')->get('gl_trans AS gl')->result();
		$trans = $this->db->get('gl_trans AS gl')->result();
// 		bug($where);
// 		bug($this->db->last_query());

		return $trans;
	}

	function get_details($account=0,$tran_type=NULL){
	    $this->db->select('SUM(gl.amount) as balance, gl.type');
	    $this->db->where('gl.account',$account);
	    $this->void_model->not_voided('gl.type','gl.type_no');

	    switch ($tran_type){
	        case ST_SALESINVOICE:
	            $this->db->where('gl.type',$tran_type);
// 	            $this->db->join('debtor_trans AS cus','cus.type=gl.type AND cus.trans_no=gl.type_no','left')->where('debtor_no IS NOT NULL');
	            break;
            default:break;
	    }

	    $result = $this->db->group_by('gl.type')->order_by('gl.type ASC')->get('gl_trans AS gl');


        if( is_object($result) ){
            $data = $result->row();
            return $data->balance;
        }
        die('error');
	}

	function get_sale_trans($account=0,$debtor_no=0,$not_in_debtor=array()){
        $this->db->select('gl.*')->from('gl_trans AS gl');
        $this->db->where('gl.account',$account);
        $this->db->join('debtor_trans AS debtor','debtor.type=gl.type AND debtor.trans_no=gl.type_no');
        if( is_array($not_in_debtor) && !empty($not_in_debtor) ){
            $this->db->where_not_in('debtor.debtor_no',$not_in_debtor);
        }

        $result = $this->db->get();
        return $result->result();

	}

	function get_receivable($account=0,$debtor_no=0,$check_different=false,$show_ob=true){

	    $tran_amount = '(trans.ov_amount + trans.ov_gst + trans.ov_freight + trans.ov_freight_tax - trans.ov_discount)';
	    $credit_or_debit = "IF(trans.type=".ST_CUSTCREDIT." OR trans.type=".ST_CUSTPAYMENT." OR trans.type= ".ST_BANKDEPOSIT.", -1, 1)";

// 	    $this->db->select('gl.type, gl.type_no');
// 	    $this->db->where('gl.account',$account);
//         $this->db->where('gl.type',ST_SALESINVOICE);

// 	    $this->db->join('gl_trans AS gl',"trans.type = gl.type AND trans.trans_no = gl.type_no N",'LEFT');
// 	    $this->db->select('(gl.amount) AS gl_amount')->where('',$account);

        $this->db->select("(SELECT IF(gl.type=".ST_OPENING_CUSTOMER.",gl.amount,SUM(gl.amount)) FROM  gl_trans AS gl WHERE gl.type=trans.type AND gl.type_no=trans.trans_no AND gl.account=1200 LIMIT 1) AS gl_amount",false);
        $this->db->select("($credit_or_debit)*$tran_amount AS tran_amount",false);
//         $this->db->select("trans.alloc*$credit_or_debit AS alloc");

//         $this->db->where("ABS(ABS(gl.amount) - ABS($tran_amount)) > 0.01");

//         $this->db->where("ABS(ABS(gl.amount) - ABS($tran_amount)) > 0.01");
//         $this->db->where("$tran_amount >",0);
        $this->db->where("trans.tran_date <=",'2015-12-31');
//         $this->db->where("trans.tran_date >=",'2015-1-1');
        $this->db->select('trans.tran_date, trans.type, trans.trans_no, trans.reference')->order_by('trans.tran_date ASC');
        $this->db->where('trans.type <>',ST_CUSTDELIVERY);
        if( !$show_ob ){
            $this->db->where('trans.type <>',ST_OPENING_CUSTOMER);
        }

        $this->db->join('debtors_master AS master',"master.debtor_no = trans.debtor_no",'LEFT');
        $this->db->select('master.name AS debtor')->order_by('master.name ASC');
        if( $debtor_no ){
            $this->db->where('trans.debtor_no',$debtor_no);
        }

        if( $check_different ){
//             $this->db->where("$tran_amount - ");
        }


	    $this->void_model->not_voided('trans.type','trans.trans_no');
// 	    $this->db->select('trans.debtor_no');
// 	    $this->db->where('trans.debtor_no',115);
	    $result = $this->db->get('debtor_trans AS trans');


// 	    bug($this->db->last_query()); die;
	    if( is_object($result) ){
	        return $result->result();
	    } else {
	        bug($this->db->last_query()); die;
	    }
	}
}