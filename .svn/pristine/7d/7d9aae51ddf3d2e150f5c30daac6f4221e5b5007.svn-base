<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

include_once(ROOT . "/reporting/includes/pdf_report.inc");

class SalesReportOrder  extends ci {
    function __construct() {
        $ci = get_instance();
        $this->ci = $ci;
        $this->input = $ci->input;
//         $this->report = $ci->module_control_load('report',null,true);
        $this->customer_trans_model = $this->model('customer_trans',true);
		$this->sys_model = $this->model('config',true);
		$this->bank_model = $this->model('bank_account',true);
		$this->contact_model = $this->model('crm',true);
		$this->sale_order_model = $this->model('sale_order',true);
		$this->common_model = $this->model('common',true);

		$this->report = module_control_load('report','report');

    }

    function order_print($pdf){

        $order_where = array();
        $from = 		input_val('PARAM_0');
        $to = 			input_val('PARAM_1');

        if (!$from || !$to) return;

        $max_id = max($from,$to);
        $min_id = min($from,$to);
        $from = $min_id;
        $to = $max_id;

        $currency =		input_val('PARAM_2');
        $email = 		input_val('PARAM_3');
        //$email = 'legiang0212@gmail.com';
        $print_as_quote = input_val('PARAM_4');
        $comments = input_val('PARAM_5');
        $orientation = input_val('PARAM_6') ? 'L' : 'P';

        $start_date = input_val('PARAM_7');
        if( $start_date ){
            $order_where['sorder.ord_date >='] = date('Y-m-d',strtotime($start_date));
        }

        $end_date = 	input_val('PARAM_8');
        if( $end_date ){
            $order_where['sorder.ord_date <='] = date('Y-m-d',strtotime($end_date));
        }

        $reference = input_val('PARAM_9');
        if( $reference ){
            $order_where['sorder.reference'] = $reference;

        }


        $this->rep = $this->report->front_report(_('TAX INVOICE'),$this->invoice_report_table);

        $this->rep->SetHeaderType('TemplateInvoice');

        for ($i = $from; $i <= $to; $i++) {

            $order = $this->sale_order_model->get_order($i, ST_SALESORDER,$order_where);
            if( !$order || empty($order) ){
                continue;
            }
            $this->pdf_print($order);
        }
        $this->rep->End();

    }


    var $invoice_report_table = array(
        'space1'=>array(' ',2),
        'stock_id'=>array('Item Code',60),
        'description'=>array('Item Description' ,225),
        'qty'=>array('Quantity' ,300,'center'),
        'units'=>array('Units',325,'center'),
        'price'=>array('Unit Price',385,'right'),
        'discount_percent'=>array('Discount %',450,'right'),
        'total'=>array('Total',515,'right'),

    );

    private function pdf_print($tran){

        $this->rep->params = array(
            'comments' => input_val('PARAM_5'),
            'bankaccount'=>0,
            'tran_date'=>sql2date($tran->ord_date),
            'reference'=>$tran->reference,
            'payment_terms'=>$tran->terms_name,
            'delivery_info'=>array(
                'Order To'=>"",
                'Deliver To'=>''
            ),
            'contact'=>$this->contact_model->get_branch_contacts($tran->branch_code,'invoice',$tran->debtor_no),
            'aux_info' => array (
                "Customer's Reference"          =>  NULL,
                _ ( "Sales Person" )            =>  $this->contact_model->get_salesman($tran->salesman,'salesman_name'),
                _('Your GST no.')               =>  $tran->tax_id,
                _ ( "Our Invoice No." )         =>  $tran->order_no,
                _ ( "Delivery Date" )                =>  $tran->delivery_date ? sql2date($tran->delivery_date) : null,
            )
        );

        $this->rep->params['delivery_info']['Order To'] = $tran->deliver_to;
        $this->rep->params['delivery_info']['Deliver To'] = $tran->name;



//         $items = $this->customer_trans_model->trans_detail('*',array('debtor_trans_type'=>ST_SALESINVOICE,'debtor_trans_no'=>$tran->trans_no));
        $items = $this->sale_order_model->get_order_details($tran->order_no,ST_SALESORDER,false);

        if( empty($items) ){
            return;
        } else {
            $this->rep->NewPage();
            $sign = 1;
            $SubTotal = $discountTotal = $shippingTotal = $taxTotal = 0;
            $taxes = array();
            foreach ($items AS $detail){

                $line_price = $detail->unit_price * $detail->quantity;
                $Net = round2($sign * ((1 - $detail->discount_percent) * $line_price), user_price_dec());
                $discountTotal += $line_price -$Net;
                $SubTotal += $Net;

                if( $detail->tax_type_id ){
                    $tax = tax_calculator($detail->tax_type_id,$line_price,$tran->tax_included);

                    if( is_object($tax) ){
                        if( !isset($taxes[$detail->tax_type_id]) ){
                            $taxes[$detail->tax_type_id] = array('name'=>$tax->name ." (".$tax->code." ".$tax->rate."%)" ,'amount'=>0);
                        }
                        $taxes[$detail->tax_type_id]['amount'] += $tax->value;
                        $taxTotal += $tax->value;
                    }


                }


                $this->rep->TextCol(1, 2,   $detail->stk_code, -2);
                $this->rep->TextCol(2, 3,   wordwrap($detail->description,40,"\n",true), 0);
                $this->rep->TextCol(3, 4,	number_format2($sign*$detail->qty,get_qty_dec($detail->stk_code)), -21);
                $this->rep->TextCol(4, 5,	$detail->units, -2);
                $this->rep->TextCol(5, 6,	number_total($detail->unit_price), -2);
                $this->rep->TextCol(6, 7,	number_total($detail->discount_percent*100) . "%" , -2);
                $this->rep->TextCol(7, 8,	number_total($Net));
                $this->rep->NewLine();
            }

            $this->rep->row = $this->rep->bottomMargin + 8.5 * $this->rep->lineHeight;


            $this->rep->aligns[3] = 'right';

            $this->rep->TextCol(1, 5,	$this->rep->company['curr_default'].":".price_in_words( $tran->tax_included ? $SubTotal :$SubTotal+$taxTotal ,ST_CUSTPAYMENT));

            $this->rep->Font('bold');
            $this->rep->TextCol(5, 7,	_('TOTAL ORDER INCL. GST'));
            $this->rep->TextCol(7, 8,	number_total( $tran->tax_included ? $SubTotal :$SubTotal+$taxTotal ));


            $this->rep->NewLine(-1);
            $this->rep->TextCol(3, 7,	_('TOTAL ORDER EX GST'));
            $this->rep->TextCol(7, 8,	number_total($tran->tax_included ? $SubTotal-$taxTotal: $SubTotal));


            $this->rep->Font();
            if( abs($discountTotal) != 0 ){
                $this->rep->NewLine(-1);
                $this->rep->TextCol(3, 7,	_('Discount Given'));
                $this->rep->TextCol(7, 8,	number_total($discountTotal));
            }



            if( count($taxes) > 0 ) foreach ($taxes AS $tax){
                if( abs($tax['amount']) != 0 ){
                    $this->rep->NewLine(-1);
                    $this->rep->TextCol(3, 7,	$tax['name'].' Amount');
                    $this->rep->TextCol(7, 8,	number_total($tax['amount']) );
                }
            }

            if( abs($shippingTotal) != 0 ){
                $this->rep->NewLine(-1);
                $this->rep->TextCol(3, 7,	_('Shipping'));
                $this->rep->TextCol(7, 8,	number_total($shippingTotal));
            }


            $this->rep->NewLine(-1);
            $this->rep->TextCol(3, 7,	_(' Sub-total'));
            $this->rep->TextCol(7, 8,	number_total($SubTotal));


        }


//         $pdf->items = $this->sale_order_model->get_order_details($i,ST_SALESORDER,false);
//         if( !$pdf->items || empty($pdf->items) ){
//             continue;
//         }
//         // bug($pdf->items);die;
//         $this->bankacc = $this->bank_model->get_default_account($order->curr_code);

//         $pdf->items_view = array(
//             'stk_code'=>array('title'=>'Item Code','w'=>15,'class'=>'boleft'),
//             'description'=>array('title'=>'Item Description' ,'w'=>38),
//             'qty'=>array('title'=>'Quantity' ,'w'=>10,'class'=>'textcenter'),
//             'units'=>array('title'=>'Units','w'=>10,'class'=>'textright'),
//             'price'=>array('title'=>'Unit Price','w'=>15,'class'=>'textright'),
//             'discount_percent'=>array('title'=>'Discount%','w'=>12,'class'=>'textright'),
//         );

//         $pdf->content_view = 'content-invoice';

//         $contact = $this->contact_model->get_branch_contacts($order->branch_code,'order',$order->debtor_no,true);
//         //  bug($contact);die;
//         $pdf->order = array(
//             'debtor'=>null,
//             'debtor_no'=>$order->debtor_no,
//             'name'=>$order->deliver_to,
//             'delivery'=>$order->deliver_to,
//             'delivery_address'=>$this->ci->form->print_address(array('addr'=>$order->delivery_address)),
//             'date'=>date('d-m-Y',strtotime($order->ord_date)),
//             'contact' => (array)$contact,
//             'order_no'=>$order->reference,
//             'reference'=>$order->reference,
//             'tax_included'=>$order->tax_included,
//             'payment_terms'=>$order->terms_name,
//             'shipping'=>$order->freight_cost,
//             'trans_no'=>order_no,

//         );

//         $pdf->order_html = $this->ci->view('reporting/order',$pdf->order,true);

//         $deliveries = get_sales_parent_numbers ( ST_SALESINVOICE, $order->order_no );

//         foreach ( $deliveries as $n => $delivery ) {
//             $deliveries [$n] = get_reference ( ST_CUSTDELIVERY, $delivery );
//         }


//         $aux_info = array (
//             _ ( "Customer's Reference" ) => array('w'=>20,'val'=>$order->customer_ref),
//             _ ( "Sales Person" ) =>     array('w'=>20,'val'=>$this->contact_model->get_salesman($order->salesman,'salesman_name')),
//             _('Your GST no.')=>         array('w'=>20,'val'=>$order->tax_id),
//             _ ( "Our Order No." ) =>    array('w'=>20,'val'=>$order->order_no),
//             _ ( "Delivery Date" ) =>    array('w'=>20,'val'=> $order->delivery_date ? sql2date( $order->delivery_date ) : null ),
//         );
//         $pdf->author_html = $this->ci->view('reporting/aux_info',array('items'=>$aux_info),true);

//         $pdf->make_report();
//         $limit++;
    }
}